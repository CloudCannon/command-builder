// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`outputs with empty config 1`] = `
Array [
  "echo \\"$ source .cloudcannon/preinstall\\"",
  "if [ -f \\".cloudcannon/preinstall\\" ]; then source .cloudcannon/preinstall; else echo \\"Not found.\\"; fi",
  "echo \\"$ cd /usr/local/__site/src/\\"",
  "cd /usr/local/__site/src/",
  "echo '$ export NODE_PATH=\`pwd\`/node_modules:$NODE_PATH'",
  "export NODE_PATH=\`pwd\`/node_modules:$NODE_PATH",
  "echo '$ [ -f package.json ] && npm i'",
  "[ -f package.json ] && npm i",
  "echo '$ cd /usr/local/__site/src/'",
  "cd /usr/local/__site/src/",
  "if [ -f \\"_cloudcannon-prebuild.sh\\" ]; then",
  "  echo \\"$ bash _cloudcannon-prebuild.sh\\"",
  "  echo \\"DEPRECATED: _cloudcannon-prebuild.sh should be moved to .cloudcannon/prebuild\\"",
  "  bash -l _cloudcannon-prebuild.sh",
  "fi",
  "echo \\"$ source .cloudcannon/prebuild\\"",
  "if [ -f \\".cloudcannon/prebuild\\" ]; then source .cloudcannon/prebuild; else echo \\"Not found.\\"; fi",
  "echo \\"$ cd /usr/local/__site/src/\\"",
  "cd /usr/local/__site/src/",
  "DETECTED_hugo_VERSION=$((hugo version 2> /dev/null || echo 'unknown') | sed 's/[][]//g' | sed 's/^hugo v//' | cut -d ' ' -f 1 | cut -d '-' -f 1)",
  "echo \\"[üè∑hugo:\${DETECTED_hugo_VERSION}]\\"",
  "DETECTED_ruby_VERSION=$((ruby -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^ruby //g\\" | cut -d \\" \\" -f 1 | cut -d \\"p\\" -f 1)",
  "echo \\"[üè∑ruby:\${DETECTED_ruby_VERSION}]\\"",
  "DETECTED_node_VERSION=$((node -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^v//\\")",
  "echo \\"[üè∑node:\${DETECTED_node_VERSION}]\\"",
  "DETECTED_deno_VERSION=$((deno -V 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^deno //\\")",
  "echo \\"[üè∑deno:\${DETECTED_deno_VERSION}]\\"",
  "DETECTED_NPM_VERSION=$((npm -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\")",
  "DETECTED_YARN_VERSION=$(yarn -v 2> /dev/null || echo 'unknown')",
  "DETECTED_BUNDLE_VERSION=$((bundle -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^Bundler version //g\\")",
  "echo \\"[üè∑npm:\${DETECTED_NPM_VERSION}]\\"",
  "echo \\"[üè∑yarn:\${DETECTED_YARN_VERSION}]\\"",
  "echo \\"[üè∑bundler:\${DETECTED_BUNDLE_VERSION}]\\"",
  "echo '$ hugo --destination public'",
  "hugo --destination public",
  "__CURRENT_NVM_VERSION=$(nvm current)",
  "nvm use default > /dev/null",
  "echo '$ npx cloudcannon-hugo@latest --destination public'",
  "npx cloudcannon-hugo@latest --destination public",
  "nvm use \\"$__CURRENT_NVM_VERSION\\" > /dev/null",
  "unset __CURRENT_NVM_VERSION",
  "echo \\"$ source .cloudcannon/postbuild\\"",
  "if [ -f \\".cloudcannon/postbuild\\" ]; then source .cloudcannon/postbuild; else echo \\"Not found.\\"; fi",
  "echo \\"$ cd /usr/local/__site/src/\\"",
  "cd /usr/local/__site/src/",
  "find /usr/local/__site/compiled/ -mindepth 1 -delete",
  "shopt -s dotglob extglob",
  "__OUTPUT_DIR_CONTENT=$(ls \\"public\\")",
  "[ -z \\"$__OUTPUT_DIR_CONTENT\\" ] || mv \\"public\\"/!(.cloudcannon|..|.) /usr/local/__site/compiled/",
  "unset __OUTPUT_DIR_CONTENT",
  "shopt -u dotglob extglob",
  "echo \\"[‚òÅÔ∏èStart Export]\\"",
  "echo \\"{\\"",
  "echo \\"\\\\\\"syncPaths\\\\\\": \\\\\\"$SYNC_PATHS\\\\\\"\\"",
  "echo \\"}\\"",
]
`;

exports[`outputs with source directory configured 1`] = `
Array [
  "echo \\"$ source .cloudcannon/preinstall\\"",
  "if [ -f \\".cloudcannon/preinstall\\" ]; then source .cloudcannon/preinstall; else echo \\"Not found.\\"; fi",
  "echo \\"$ cd /usr/local/__site/src/\\"",
  "cd /usr/local/__site/src/",
  "echo '$ export NODE_PATH=\`pwd\`/node_modules:$NODE_PATH'",
  "export NODE_PATH=\`pwd\`/node_modules:$NODE_PATH",
  "echo '$ [ -f package.json ] && npm i'",
  "[ -f package.json ] && npm i",
  "echo '$ cd /usr/local/__site/src/'",
  "cd /usr/local/__site/src/",
  "if [ -f \\"_cloudcannon-prebuild.sh\\" ]; then",
  "  echo \\"$ bash _cloudcannon-prebuild.sh\\"",
  "  echo \\"DEPRECATED: _cloudcannon-prebuild.sh should be moved to .cloudcannon/prebuild\\"",
  "  bash -l _cloudcannon-prebuild.sh",
  "fi",
  "echo \\"$ source .cloudcannon/prebuild\\"",
  "if [ -f \\".cloudcannon/prebuild\\" ]; then source .cloudcannon/prebuild; else echo \\"Not found.\\"; fi",
  "echo \\"$ cd /usr/local/__site/src/\\"",
  "cd /usr/local/__site/src/",
  "DETECTED_hugo_VERSION=$((hugo version 2> /dev/null || echo 'unknown') | sed 's/[][]//g' | sed 's/^hugo v//' | cut -d ' ' -f 1 | cut -d '-' -f 1)",
  "echo \\"[üè∑hugo:\${DETECTED_hugo_VERSION}]\\"",
  "DETECTED_ruby_VERSION=$((ruby -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^ruby //g\\" | cut -d \\" \\" -f 1 | cut -d \\"p\\" -f 1)",
  "echo \\"[üè∑ruby:\${DETECTED_ruby_VERSION}]\\"",
  "DETECTED_node_VERSION=$((node -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^v//\\")",
  "echo \\"[üè∑node:\${DETECTED_node_VERSION}]\\"",
  "DETECTED_deno_VERSION=$((deno -V 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^deno //\\")",
  "echo \\"[üè∑deno:\${DETECTED_deno_VERSION}]\\"",
  "DETECTED_NPM_VERSION=$((npm -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\")",
  "DETECTED_YARN_VERSION=$(yarn -v 2> /dev/null || echo 'unknown')",
  "DETECTED_BUNDLE_VERSION=$((bundle -v 2> /dev/null || echo 'unknown') | sed \\"s/[][]//g\\" | sed \\"s/^Bundler version //g\\")",
  "echo \\"[üè∑npm:\${DETECTED_NPM_VERSION}]\\"",
  "echo \\"[üè∑yarn:\${DETECTED_YARN_VERSION}]\\"",
  "echo \\"[üè∑bundler:\${DETECTED_BUNDLE_VERSION}]\\"",
  "echo '$ hugo --source src --destination public'",
  "hugo --source src --destination public",
  "__CURRENT_NVM_VERSION=$(nvm current)",
  "nvm use default > /dev/null",
  "echo '$ npx cloudcannon-hugo@latest --source src --destination public'",
  "npx cloudcannon-hugo@latest --source src --destination public",
  "nvm use \\"$__CURRENT_NVM_VERSION\\" > /dev/null",
  "unset __CURRENT_NVM_VERSION",
  "echo \\"$ source .cloudcannon/postbuild\\"",
  "if [ -f \\".cloudcannon/postbuild\\" ]; then source .cloudcannon/postbuild; else echo \\"Not found.\\"; fi",
  "echo \\"$ cd /usr/local/__site/src/\\"",
  "cd /usr/local/__site/src/",
  "find /usr/local/__site/compiled/ -mindepth 1 -delete",
  "shopt -s dotglob extglob",
  "__OUTPUT_DIR_CONTENT=$(ls \\"src/public\\")",
  "[ -z \\"$__OUTPUT_DIR_CONTENT\\" ] || mv \\"src/public\\"/!(.cloudcannon|..|.) /usr/local/__site/compiled/",
  "unset __OUTPUT_DIR_CONTENT",
  "shopt -u dotglob extglob",
  "echo \\"[‚òÅÔ∏èStart Export]\\"",
  "echo \\"{\\"",
  "echo \\"\\\\\\"syncPaths\\\\\\": \\\\\\"$SYNC_PATHS\\\\\\"\\"",
  "echo \\"}\\"",
]
`;
